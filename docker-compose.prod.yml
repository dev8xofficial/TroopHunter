version: '3.8'
name: 'helloabdul_prod'
services:
  nginx_prod:
    container_name: nginx_prod
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
    ports:
      - '80:80'
    volumes:
      - ./nginx/conf.d/nginx.conf:/etc/nginx/conf.d/nginx.conf
    depends_on:
      - backend_prod
    networks:
      - custom_network

  # jenkins:
  #   container_name: jenkins
  #   build:
  #     context: .
  #     dockerfile: ./jenkins/Dockerfile
  #   ports:
  #     - '8080:8080'
  #   volumes:
  #     - ./jenkins/jenkins_home:/var/jenkins_home
  #     - /var/run/docker.sock:/var/run/docker.sock

  postgres_prod:
    container_name: postgres_prod
    build:
      context: .
      dockerfile: ./postgres/Dockerfile
    restart: always
    ports:
      - '5432:5432'
    env_file:
      - ./backend/.env
    volumes:
      - ./postgres/postgres_prod:/var/lib/postgresql/data
    networks:
      - custom_network

  pgadmin_prod:
    container_name: pgadmin_prod
    build:
      context: .
      dockerfile: ./pgadmin/Dockerfile
    ports:
      - '60000:80'
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=Ssg123777
    volumes:
      - ./pgadmin/pgadmin:/var/lib/pgadmin
    depends_on:
      - postgres_prod

  backend_prod: # Production environment
    container_name: backend_prod
    build:
      context: .
      dockerfile: ./backend/Dockerfile
      target: production # Use the production stage in the Dockerfile
    entrypoint: ['/bin/bash', '/app/backend/entrypoint.sh']
    env_file:
      - ./backend/.env # Use production environment variables
    ports:
      - '50001:50001'
    depends_on:
      postgres_prod:
        condition: service_started
    networks:
      - custom_network

  crm_prod:
    container_name: crm_prod
    build:
      context: .
      dockerfile: ./crm/Dockerfile
      target: production
    env_file:
      - ./crm/.env # Use development environment variables
    ports:
      - '5173:5173'
    depends_on:
      - postgres_prod
      - backend_prod
    networks:
      - custom_network

volumes:
  pgadmin-data:
  nginx:

networks:
  custom_network:
    driver: bridge
