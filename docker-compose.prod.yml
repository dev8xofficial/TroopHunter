name: 'helloabdul_prod'
services:
  # ci:
  #   container_name: ci
  #   build:
  #     context: .
  #     dockerfile: ./ci/Dockerfile
  #   ports:
  #     - '4999:4999'
  #   networks:
  #     - custom_network

  postgres_prod:
    container_name: postgres_prod
    build:
      context: .
      dockerfile: ./postgres/Dockerfile
    restart: always
    ports:
      - '5432:5432'
    env_file:
      - ./backend/.env
    volumes:
      - ./postgres/postgres_prod:/var/lib/postgresql/data
    networks:
      - custom_network

  # pgadmin_prod:
  #   container_name: pgadmin_prod
  #   build:
  #     context: .
  #     dockerfile: ./postgres/Dockerfile
  #   ports:
  #     - '60001:80'
  #   environment:
  #     - PGADMIN_DEFAULT_EMAIL=admin@example.com
  #     - PGADMIN_DEFAULT_PASSWORD=Ssg123777
  #   volumes:
  #     - ./pgadmin/pgadmin:/var/lib/pgadmin
  #   depends_on:
  #     - postgres_prod

  backend_prod: # Development environment
    container_name: backend_prod
    build:
      context: .
      dockerfile: ./backend/Dockerfile
      target: development # Use the development stage in the Dockerfile
    entrypoint: ['/bin/bash', '/app/backend/entrypoint.sh']
    env_file:
      - ./backend/.env # Use development environment variables
    ports:
      - '50001:50001'
    depends_on:
      postgres_prod:
        condition: service_started
    networks:
      - custom_network

  # crm_prod:
  #   container_name: crm_prod
  #   build:
  #     context: .
  #     dockerfile: ./crm/Dockerfile
  #     target: development
  #   env_file:
  #     - ./crm/.env # Use development environment variables
  #   ports:
  #     - '5173:5173'
  #   depends_on:
  #     - postgres_prod
  #     - backend_prod
  #   networks:
  #     - custom_network

volumes:
  pgadmin-data:

networks:
  custom_network:
    # external: true
