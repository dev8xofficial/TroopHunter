{
  "name": "troophunter",
  "version": "1.0.0",
  "private": true,
  "keywords": [],
  "author": "",
  "license": "ISC",
  "description": "",
  "scripts": {
    "\n============================== Turbo Commands =====================": "",
    "dev": "turbo dev",
    "build": "turbo build",
    "lint": "turbo run lint",
    "\n============================== Repo Commands ======================": "",
    "install:packages:components": "cd packages/components && npm install",
    "install:packages:messages": "cd packages/messages && npm install",
    "install:packages:utils": "cd packages/utils && npm install",
    "install:packages:validator": "cd packages/validator && npm install",
    "install:packages:middlewares": "cd packages/middlewares && npm install",
    "install:packages:services": "cd packages/services && npm install",
    "build:dev8x": "npm run build -- --filter=dev8x",
    "build:helloabdul": "npm run build -- --filter=helloabdul",
    "build:troophunter": "npm run build -- --filter=troophunter",
    "build:auth": "npm run build -- --filter=dev8x",
    "build:businesses": "npm run build -- --filter=helloabdul",
    "build:countries": "npm run build -- --filter=troophunter",
    "build:main": "npm run build -- --filter=troophunter",
    "build:queues": "npm run build -- --filter=dev8x",
    "build:users": "npm run build -- --filter=helloabdul",
    "build:packages:messages": "cd packages/messages && npm run build",
    "build:packages:utils": "cd packages/utils && npm run build",
    "build:packages:validator": "cd packages/validator && npm run build",
    "build:packages:middlewares": "cd packages/middlewares && npm run build",
    "build:packages:services": "cd packages/services && npm run build",
    "\n============================== Repo Commands - Main ===============": "",
    "install:workspace": "npm install",
    "install:packages": "run-s install:packages:components install:packages:messages install:packages:utils install:packages:validator install:packages:middlewares install:packages:services",
    "build:microfrontend": "run-s build:dev8x build:helloabdul build:troophunter",
    "build:microservices": "run-s build:auth build:businesses build:countries build:queues build:users build:main",
    "build:packages": "run-s build:packages:messages build:packages:utils build:packages:validator build:packages:middlewares build:packages:services",
    "start:microfrontend": "npm run dev -- --filter=troophunter --filter=dev8x --filter=helloabdul",
    "start:microservices": "npm run dev -- --filter=auth --filter=businesses --filter=countries --filter=queues --filter=users --filter=main",
    "\n============================== Cleaning Commands ==================": "",
    "clean:microfrontend": "find microfrontend/ -type d \\( -name '.next' -o -name '.turbo' -o -name 'node_modules' \\) -prune -exec rm -rf '{}' + && find microfrontend/ -type f \\( -name 'package-lock.json' -o -name 'yarn.lock' \\) -delete",
    "clean:microservices": "find microservices/ -type d \\( -name 'dist' -o -name '.turbo' -o -name 'logs' -o -name 'node_modules' \\) -prune -exec rm -rf '{}' + && find microservices/ -type f \\( -name 'package-lock.json' -o -name 'yarn.lock' \\) -delete",
    "clean:packages": "find packages/ -type d \\( -name 'dist' -o -name '.turbo' -o -name 'node_modules' \\) -prune -exec rm -rf '{}' + && find packages/ -type f \\( -name 'package-lock.json' -o -name 'yarn.lock' \\) -delete",
    "clean:scraper": "rm -rf scraper/venv scraper/__pycache__ scraper/src/__pycache__ scraper/logs/* && find scraper/ -type d -name '__pycache__' -prune -exec rm -rf '{}' +",
    "clean:terraform": "rm -rf terraform/.terraform terraform/.terraform.lock.hcl terraform/terraform.tfstate terraform/terraform.tfstate.backup",
    "clean:root": "rm -rf .turbo node_modules package-lock.json",
    "clean:all": "run-s clean:root clean:microfrontend clean:microservices clean:packages clean:scraper clean:terraform",
    "\n============================== Docker - Start Commands ============": "",
    "start:loc": "docker compose -f docker-compose.loc.yml --parallel 1 up",
    "start:dev": "docker compose -f docker-compose.dev.yml --parallel 1 up",
    "start:stag": "docker compose -f docker-compose.stag.yml --parallel 1 up",
    "start:prod": "docker compose -f docker-compose.prod.yml --parallel 1 up",
    "start:loc:amd": "DOCKER_DEFAULT_PLATFORM=linux/amd64 docker compose -f docker-compose.loc.yml --parallel 1 up",
    "start:dev:amd": "DOCKER_DEFAULT_PLATFORM=linux/amd64 docker compose -f docker-compose.dev.yml --parallel 1 up",
    "start:stag:amd": "DOCKER_DEFAULT_PLATFORM=linux/amd64 docker compose -f docker-compose.stag.yml --parallel 1 up",
    "start:prod:amd": "DOCKER_DEFAULT_PLATFORM=linux/amd64 docker compose -f docker-compose.prod.yml --parallel 1 up",
    "start:devops": "docker compose -f docker-compose.devops.yml up",
    "\n============================== Docker - Build Commands ============": "",
    "build:loc": "docker compose -f docker-compose.loc.yml --parallel 1 build --build-arg NODE_ENV=local",
    "build:dev": "docker compose -f docker-compose.dev.yml --parallel 1 build --build-arg NODE_ENV=development",
    "build:stag": "docker compose -f docker-compose.stag.yml --parallel 1 build --build-arg NODE_ENV=staging",
    "build:prod": "docker compose -f docker-compose.prod.yml --parallel 1 build --build-arg NODE_ENV=production",
    "build:loc:amd": "DOCKER_DEFAULT_PLATFORM=linux/amd64 docker compose -f docker-compose.loc.yml --parallel 1 build --build-arg NODE_ENV=local",
    "build:dev:amd": "DOCKER_DEFAULT_PLATFORM=linux/amd64 docker compose -f docker-compose.dev.yml --parallel 1 build --build-arg NODE_ENV=development",
    "build:stag:amd": "DOCKER_DEFAULT_PLATFORM=linux/amd64 docker compose -f docker-compose.stag.yml --parallel 1 build --build-arg NODE_ENV=staging",
    "build:prod:amd": "DOCKER_DEFAULT_PLATFORM=linux/amd64 docker compose -f docker-compose.prod.yml --parallel 1 build --build-arg NODE_ENV=production",
    "build:devops": "docker compose -f docker-compose.devops.yml --parallel 1 build",
    "\n============================== Docker - Remove Commands ===========": "",
    "stop:containers": "docker stop $(docker ps -aq)",
    "remove:containers": "docker rm $(docker ps -aq)",
    "remove:images": "docker image prune -af",
    "remove:all": "docker system prune -af"
  },
  "devDependencies": {
    "concurrently": "^9.1.2",
    "rimraf": "^5.0.1"
  },
  "dependencies": {
    "cross-env": "^10.0.0",
    "dotenv-cli": "^10.0.0",
    "force": "^0.0.3",
    "npm-run-all": "^4.1.5",
    "react-countup": "^6.5.3",
    "serve": "^14.2.4",
    "turbo": "^2.5.6"
  },
  "engines": {
    "node": ">=18"
  },
  "packageManager": "npm@10.1.0",
  "workspaces": [
    "packages/*",
    "microservices/*",
    "microfrontend/*"
  ]
}
