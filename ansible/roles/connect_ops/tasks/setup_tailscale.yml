---
- name: Add Tailscale keyring
  become: true
  copy:
    src: ./jammy.noarmor.gpg
    dest: /usr/share/keyrings/tailscale-archive-keyring.gpg
    mode: '0644'

- name: Add Tailscale APT repository list
  become: true
  copy:
    src: ./jammy.tailscale-keyring.list
    dest: /etc/apt/sources.list.d/tailscale.list
    mode: '0644'

- name: Update APT cache and install Tailscale
  become: true
  apt:
    name: tailscale
    state: present
    update_cache: yes

- name: Update APT cache and install Tailscale with retries
  become: true
  apt:
    name: tailscale
    state: present
    update_cache: yes
  register: install_tailscale
  retries: 5
  delay: 10
  until: install_tailscale is succeeded

- name: Ensure tailscaled is enabled and running
  systemd:
    name: tailscaled
    enabled: yes
    state: started
    daemon_reload: yes

- name: Configure sysctl for Tailscale forwarding (official method)
  copy:
    dest: /etc/sysctl.d/99-tailscale.conf
    content: |
      net.ipv4.ip_forward = 1
      net.ipv6.conf.all.forwarding = 1
    owner: root
    group: root
    mode: '0644'

- name: Reload sysctl settings from 99-tailscale.conf
  command: sysctl -p /etc/sysctl.d/99-tailscale.conf
  register: sysctl_reload
  changed_when: "'= 1' in sysctl_reload.stdout"

- name: Create nftables NAT table (if using nftables)
  when: use_nftables
  block:
    - name: Create file /etc/nftables.rules
      copy:
        dest: /etc/nftables.rules
        content: |
          #!/usr/sbin/nft -f
          table ip nat {
            chain prerouting {
              type nat hook prerouting priority 0;
            }
            chain postrouting {
              type nat hook postrouting priority 100;
              oifname != "tailscale0" counter masquerade
            }
          }

    - name: Enable nftables service
      apt:
        name: nftables
        state: present

    - name: Load nftables rules
      command: nft -f /etc/nftables.rules
      changed_when: false

    - name: Ensure nftables rules persist (enable service)
      systemd:
        name: nftables
        enabled: yes
        state: started

- name: Add iptables POSTROUTING masquerade (fallback if not using nftables)
  when: not use_nftables
  block:
    - name: Add NAT POSTROUTING rule
      ansible.builtin.command: >
        iptables -t nat -C POSTROUTING -o {{ lan_iface }} -j MASQUERADE
      register: iptables_check
      ignore_errors: true

    - name: Insert POSTROUTING MASQUERADE if missing
      ansible.builtin.command: >
        iptables -t nat -A POSTROUTING -o {{ lan_iface }} -j MASQUERADE
      when: iptables_check.rc != 0

    - name: Install netfilter-persistent to persist iptables rules
      apt:
        name:
          - netfilter-persistent
          - iptables-persistent
        state: present

    - name: Save iptables rules so they persist
      command: netfilter-persistent save

- name: Check if tailscale is already authenticated
  command: tailscale status --json
  register: tailscale_status
  failed_when: false
  changed_when: false

- name: Bring up tailscale and advertise routes + exit node if not already joined
  command: >
    tailscale up --authkey {{ tailscale_auth_key }}
    {% if advertise_subnets|length > 0 %}
    --advertise-routes={{ advertise_subnets | join(',') }}
    {% endif %}
  when: tailscale_status.rc != 0 or ('NeedsLogin' in tailscale_status.stdout)
  register: tailscale_up
  changed_when: "'already up' not in tailscale_up.stdout"

- name: Confirm advertised routes (tailscale status)
  command: tailscale status --json
  register: tailscale_final
  changed_when: false

- name: Print tailscale IPv4 address
  command: tailscale ip -4
  register: tailscale_ip
  changed_when: false

- name: Show summary
  debug:
    msg:
      - "Tailscale IPv4(s): {{ tailscale_ip.stdout_lines }}"
      - "Tailscale status JSON location: /var/lib/tailscale or command 'tailscale status'"