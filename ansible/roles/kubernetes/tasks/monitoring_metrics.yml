---
- name: Deploy metrics-server from official manifest
  command: kubectl {{ cluster_action }} -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml --kubeconfig={{ kubeconfig_path }}
  when: cluster_action == "apply"
  register: deploy_result

- name: Fix metrics-server TLS certificate validation issue
  command: >
    kubectl patch deployment metrics-server -n kube-system 
    --type='json' 
    -p='[{"op": "add", "path": "/spec/template/spec/containers/0/args/-", "value": "--kubelet-insecure-tls"}]' 
    --kubeconfig={{ kubeconfig_path }}
  when: 
    - cluster_action == "apply"
    - deploy_result.rc == 0
  ignore_errors: true
  register: patch_result

- name: Wait for metrics-server deployment to be ready
  kubernetes.core.k8s_info:
    kubeconfig: "{{ kubeconfig_path }}"
    api_version: apps/v1
    kind: Deployment
    name: metrics-server
    namespace: kube-system
    wait: true
    wait_condition:
      type: Available
      status: "True"
    wait_timeout: 300
  when: cluster_action == "apply"

- name: Display metrics-server deployment status
  debug:
    msg: |
      Metrics-server deployment: {{ deploy_result.rc == 0 | ternary('SUCCESS', 'FAILED') }}
      TLS patch applied: {{ patch_result.rc == 0 | ternary('SUCCESS', 'FAILED or SKIPPED') }}
  when: cluster_action == "apply"

- name: Delete metrics-server
  command: kubectl delete -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml --kubeconfig={{ kubeconfig_path }} --ignore-not-found
  when: cluster_action == "delete"