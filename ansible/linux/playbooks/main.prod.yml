---
# Play for Ubuntu local server
- hosts: ubuntu
  # user: ubuntu-server
  become: true
  become_method: sudo
  become_user: root
  vars_files:
    - /ansible/linux/secrets/github_token
  vars:
    USER: ubuntu-server
    ansible_user: ubuntu-server
    NODE_VERSION: 20.12.2
    GIT_REPO: "https://{{ github_token }}@github.com/helloabdul/TroopHunterNew.git"
    GIT_BRANCH: main
    PROJECT_NAME: TroopHunter
    ENVIRONMENT: prod
    ENV_PATH: "/workspace/ansible/linux/secrets"
    SERVER_IP: "192.168.1.200"
    script_local_path: ./install-kubeadm.sh
    script_remote_path: /tmp/install-kubeadm.sh
    # PROTONVPN_USERNAME: 49bFnqbhzhVjOm5Z
    # PROTONVPN_PASSWORD: e2yzCr6pKNc1fHXpwvujNalsIatnnrGU
    # PROTONVPN_SERVER: US-NY#627
  gather_facts: true
  roles:
    # - proton
    - common
    - nvm
    # - node
    - docker
    - kubectl
    - minikube
    - istioctl
    - github
    - docker_deployment
    - local_deployment
    # - kubernetes

# Play for Kubernetes Controller
- name: Setup Kubernetes
  hosts: k8s_controller, k8s_workers
  become: true
  vars:
    user: k8s-ctrlr
    containerd_package: containerd
    containerd_package_state: present
    containerd_service_state: started
    containerd_service_enabled: true
    containerd_config_default_write: true
    containerd_config_cgroup_driver_systemd: true
  roles:
  - common
  - kubernetes

# Play for Kubernetes Node
- name: Initialize Kubernetes cluster
  hosts: k8s_controller
  become: true
  vars:
    secrets_dir: "/workspace/ansible/linux/secrets"
    kube_home: "/home/{{ ansible_user }}"
  tasks:
    - include_tasks: ../roles/kubernetes/tasks/kubernetes_initialize.yml

# Play for Kubernetes Node
- name: Join Kubernetes cluster
  hosts: k8s_workers
  become: true
  vars:
    secrets_dir: "/workspace/ansible/linux/secrets"
  tasks:
    - include_tasks: ../roles/kubernetes/tasks/kubernetes_join.yml